{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useState","React","useEffect","App","url","timestamp","isLoad","state","setState","localStorage","getItem","undefined","className","style","fontSize","random","Form","width","FormGroup","Input","type","placeholder","textAlign","onChange","input","target","value","Button","onClick","setItem","length","alert","fetch","then","response","json","data","status","serverLoadTimestamp","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAIOA,EAAuBC,IAAvBD,SAAUE,EAAaD,IAAbC,UA8DFC,MA5Df,WACE,IACA,EAA0BH,EAAS,CAACI,IAAK,GAAIC,UAAW,GAAIC,QAAQ,IAApE,mBAAOC,EAAP,KAAcC,EAAd,KA0CA,OAxCAN,GAAU,WACJK,EAAMD,QACRE,EAAS,2BAAKD,GAAN,IAAaH,IAAKK,aAAaC,QAAQ,OAAQJ,QAAQ,aAInDK,GAAbJ,EAAMH,KAAkBI,EAAS,2BAAKD,GAAN,IAAaH,IAAK,MAmCnD,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,mBAAGC,MAAO,CAACC,SAAU,QAArB,SAA+BP,EAAMQ,SACrC,6BAAKR,EAAMF,YACX,eAACW,EAAA,EAAD,CAAMH,MAAO,CAACI,MAAO,QAArB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,yBAAyBR,MAAO,CAACS,UAAW,UAAWC,SAAU,SAAAC,GAAK,OAAEhB,EAAS,2BAAKD,GAAN,IAAaH,IAAKoB,EAAMC,OAAOC,UAAUA,MAAOnB,EAAMH,QAEvK,cAACuB,EAAA,EAAD,CAAQC,QAzCA,WACdnB,aAAaoB,QAAQ,MAAOtB,EAAMH,KACX,GAApBG,EAAMH,IAAI0B,OAAaC,MAAM,4BAE9BC,MAAMzB,EAAMH,KAAK6B,MAAK,SAAAC,GACpB,GAAGA,EAAS9B,KAAOG,EAAMH,IAIvB,OAAO8B,EAASC,OAHhBJ,MAAM,kBAMTE,MAAK,SAAAG,QACOzB,GAARyB,IAGoB,WAAfA,EAAKC,OACXN,MAAM,0BAGNvB,EAAS,CACPH,UAAY+B,EAAKA,KAAKE,oBACtBvB,OAAQqB,EAAKA,KAAKrB,aAGrBwB,OAAM,SAAAC,GACPT,MAAM,0BACNU,QAAQC,IAAIF,OAcV,mCC/CKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b223a154.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport './App.css';\n\nconst {useState, useEffect} = React\n\nfunction App() {\n  let isLoad = false\n  const [state, setState] = useState({url: '', timestamp: '', isLoad: false});\n\n  useEffect(() => {\n    if(!state.isLoad){\n      setState({ ...state, url: localStorage.getItem('url'), isLoad: true})\n    }\n  });\n  \n  if(state.url == undefined) setState({ ...state, url: ''})\n\n  let generateOTP=()=>{\n    localStorage.setItem('url', state.url)\n    if(state.url.length == 0) alert('Anda belum memasukan URL')\n    else{\n      fetch(state.url).then(response=>{\n        if(response.url != state.url){\n          alert('Invalid URL')\n        }\n        else {\n          return response.json()\n        }\n      })\n      .then(data=>{\n        if(data == undefined){\n\n        }\n        else if(data.status != 'success'){\n          alert('Gagal mendapatkan data')\n        }\n        else{\n          setState({ \n            timestamp : data.data.serverLoadTimestamp,\n            random: data.data.random,\n          })\n        }\n      }).catch(err=>{\n        alert('Gagal mendapatkan data')\n        console.log(err)\n      })\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p style={{fontSize: '16vw'}}>{state.random}</p>\n        <h2>{state.timestamp}</h2>\n        <Form style={{width: '50vw'}}>\n          <FormGroup>\n            <Input type=\"text\" placeholder=\"http://localhost:8080/\" style={{textAlign: 'center'}} onChange={input=>setState({ ...state, url: input.target.value}) } value={state.url}/>\n          </FormGroup>\n          <Button onClick={generateOTP}>Generate OTP</Button>\n        </Form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}